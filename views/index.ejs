<!DOCTYPE html>
<html>
	<head>
		<title>CMPE 273</title>
		<script type="text/javascript" src="//platform.linkedin.com/in.js">
			api_key: 78v5uwh7n4wme2
			onLoad: OnLinkedInFrameworkLoad
			authorize: true
		</script>
		<link rel="shortcut icon" type="image/x-icon" href="./images/ico/favicon.ico">
		<link type="text/css" rel="stylesheet" href="/stylesheets/materialize.min.css"  media="screen,projection"/>
		<link type="text/css" rel="stylesheet" href="/stylesheets/materialize.css">
		<link rel='stylesheet' href='/stylesheets/style.css' />
	</head>
	<body>

		<nav class="grey darken-3 lighten-1" role="navigation">
			<div class="nav-wrapper container"><a id="logo-container" href="#" class="brand-logo">CMPE 273</a>
				<a href="#" data-activates="nav-mobile" class="button-collapse"><i class="mdi-navigation-menu"></i></a>
			</div>
		</nav>


		<div class="container">
			<div class="section">
				<div class="row">
					<form class="col s6">
						<h4>Sign In Using Linked IN</h4>
						<div class="input-field col s12">
							<script type="in/Login">
							</script>
						</div>
						<div class="input-field col s12 center" id="logoutDiv" style="display:none">          
							<a class="btn waves-effect waves-light grey darken-3" onclick="logout();">Logout</a>
						</div>
						<h4 id="">Recommended Courses</h4>
						<table class="hoverable" id="courseList">
							<thead>
								<tr>
									<th data-field="Course Name">Course Name</th>
									<th data-field="URL">URL</th>
								</tr>
							</thead>
							<tbody>
							</tbody>
						</table>

					</form>

					<div class="col s6">
						<h4 id="username"></h4>
						<table class="hoverable" id="skillsList">
							<thead>
								<tr>
									<th data-field="skills">Skills</th>
								</tr>
							</thead>
							<tbody>
							</tbody>
						</table>


					</div>
				</div>
			</div>
		</div>

		<script type="text/javascript">
			
			function logout(){
				IN.User.logout(function(){
					$("#skillsList tbody").empty();
					$("#username").html("");
					console.log("Logged out successfully");
					$('#logoutDiv').hide();
				}, function(){
					console.log("Error Logging out");
				});
			}

			function OnLinkedInFrameworkLoad() {
				IN.User.authorize(function(){
					console.log("User logged In");
					IN.Event.on(IN, "auth", OnLinkedInAuth);
					$('#logoutDiv').show();
				}, function(){
					console.log("User logged Out");
				});
			}

			function OnLinkedInAuth() {
				console.log("OnLinkedInAuth");
				url = '/people/~:(id,first-name,last-name,skills,three-current-positions,three-past-positions,projects)?format=json';

				IN.API.Raw().url(url).method('GET').body().result(function(res){
					console.log(res);
					var firstName = res.firstName;
					var lastName = res.lastName;
					console.log(firstName + " " + lastName);
					var skills= res.skills.values;
					var currentPositions = res.threeCurrentPositions.values;
					var pastPositions = res.threePastPositions.values;
					var pros = res.projects.values;
					$("#username").html(firstName + " " + lastName);
					$("#skillsList tbody").empty();
					$("#courseList tbody").empty();

					var yearsOfExperience=0;
					if(currentPositions!==undefined){
						currentPositions.forEach(function(position){
							var endDate = {year:new Date().getFullYear()};
							yearsOfExperience = yearsOfExperience + calculateYears(position.startDate, endDate);
						});
					}
					if(pastPositions!==undefined){
					
						pastPositions.forEach(function(position){
							yearsOfExperience = yearsOfExperience + calculateYears(position.startDate, position.endDate);
						});
					}
					var objectArray = new Array();
					if(skills!=undefined){
						skills.forEach(function(skill){

							if(skill.skill.name != 'C++'){
							//console.log("count of ", skill.skill.name,scanProjects(pros, skill.skill.name));
								var name = skill.skill.name;
								var skillOccCount = scanProjects(pros, name);
								//var temp = {name : skillOccCount};
								if(skillOccCount<5){
									var obj = {};
									obj['skill'] = name;
									obj['count'] = skillOccCount;
									objectArray.push(obj);
								}
							}
							var tr = "<tr>";
							tr+="<td>"+ skill.skill.name +"</td>";
							tr+="</tr>";
							$("#skillsList tbody").append(tr);              
						})
						objectArray.sort(function(a,b){
							return b.count - a.count;
						});
						//console.log(objectArray);
						recommendCourses(objectArray);
					}else{
						//if user doesn't have any skills than 
						// TO be done 
						//recommendCourses();
					}	
				});
			}

			function recommendCourses(objectArray){
				//console.log(objectArray);
				$.ajax({
					method: "POST",
					url: "/rules/recommend",
					cache: false,
					data: {data : JSON.stringify(objectArray)},
					success: function(res){
						res.data.forEach(function(skill){
							//console.log(skill);
							courses = JSON.parse(skill.courses);
							courses.forEach(function(course){
								var tr = "<tr>";
								tr+="<td>"+ course.name +"</td>";
								tr+="<td>"+ course.url +"</td>";
								tr+="</tr>";
								$("#courseList tbody").append(tr);              
								console.log(course.name);
								console.log(course.url);
							});
						});
						//alert(res.data);
					},
					error: function(err){

					}
				});
			}

			function scanProjects(projects, skill)
			{
				var count =0;
					projects.forEach(function(project){
						count = count + countOcurrences(project.description, skill);
					});
				return count;
			}

			function countOcurrences(str, value)
			{
   				var regExp = new RegExp(value, "gi");
   				return str.match(regExp) ? str.match(regExp).length : 0;  
			}

			function calculateYears(startDate, endDate)
			{
				var stYear = startDate.year;
				var endYear = endDate.year;
				return endYear-stYear;
			}
			
		</script>
		<script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
		<script src="/javascripts/materialize.js"></script>   

	</body>
</html>